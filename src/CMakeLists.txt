# 增加PCL库的依赖
FIND_PACKAGE( PCL 1.8 REQUIRED COMPONENTS common io visualization filters)

# 增加opencv的依赖
FIND_PACKAGE( OpenCV REQUIRED )

# 添加头文件和库文件
ADD_DEFINITIONS( ${PCL_DEFINITIONS} )
INCLUDE_DIRECTORIES( ${PCL_INCLUDE_DIRS}  )
LINK_LIBRARIES( ${PCL_LIBRARY_DIRS} )

# 添加g2o的依赖
# 因为g2o不是常用库，要添加它的findg2o.cmake文件
LIST( APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules )
SET( G2O_ROOT /usr/local/include/g2o )
FIND_PACKAGE( G2O )
# CSparse
FIND_PACKAGE( CSparse )
INCLUDE_DIRECTORIES( ${G2O_INCLUDE_DIR} ${CSPARSE_INCLUDE_DIR} )

#ADD_EXECUTABLE( generate_pointcloud generatePointCloud.cpp )
#TARGET_LINK_LIBRARIES( generate_pointcloud ${OpenCV_LIBS} 
#    ${PCL_LIBRARIES} )

ADD_LIBRARY(slambase slamBase.cpp)
TARGET_LINK_LIBRARIES(slambase 
	${OpenCV_LIBS} 
	${PCL_LIBRARIES} 
)

#ADD_EXECUTABLE( detectFeatures detectFeatures.cpp )
#TARGET_LINK_LIBRARIES( detectFeatures 
#	slambase
#	${OpenCV_LIBS} 
#	${PCL_LIBRARIES}
#)

#ADD_EXECUTABLE( joinPointCloud joinPointCloud.cpp )
#TARGET_LINK_LIBRARIES( joinPointCloud 
#	slambase
#	${OpenCV_LIBS} 
#	${PCL_LIBRARIES}
#)

ADD_EXECUTABLE( visualOdometry visualOdometry.cpp )
TARGET_LINK_LIBRARIES( visualOdometry 
	slambase
	${OpenCV_LIBS} 
	${PCL_LIBRARIES}
)

ADD_EXECUTABLE( slamEnd slamEnd.cpp )
TARGET_LINK_LIBRARIES( slamEnd
    slambase
    ${OpenCV_LIBS}
    ${PCL_LIBRARIES}
    /usr/local/lib/libg2o_core.dylib 
    /usr/local/lib/libg2o_types_slam3d.dylib 
    /usr/local/lib/libg2o_solver_csparse.dylib 
    /usr/local/lib/libg2o_stuff.dylib 
    /usr/local/lib/libg2o_csparse_extension.dylib 
    ${CSPARSE_LIBRARY}
)

ADD_EXECUTABLE( slam slam.cpp )
TARGET_LINK_LIBRARIES( slam
    slambase
    ${OpenCV_LIBS}
    ${PCL_LIBRARIES}
    /usr/local/lib/libg2o_core.dylib 
    /usr/local/lib/libg2o_types_slam3d.dylib 
    /usr/local/lib/libg2o_solver_csparse.dylib 
    /usr/local/lib/libg2o_stuff.dylib 
    /usr/local/lib/libg2o_csparse_extension.dylib 
    ${CSPARSE_LIBRARY}
)